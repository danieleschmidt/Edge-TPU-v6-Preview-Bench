name: Edge TPU v6 Bench CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 mypy
    - name: Code quality checks
      run: |
        black --check src/
        flake8 src/
        mypy src/

  security-audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Security audit
      run: python security_audit.py

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov numpy scipy matplotlib
    - name: Run tests
      run: pytest tests/ --cov=src/
    - name: Quality gates
      run: python quality_gates_comprehensive.py

  build-and-push:
    needs: [code-quality, security-audit, test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build Docker image
      run: docker build -t edge-tpu-v6-bench:${{ github.sha }} .
    - name: Tag latest
      run: docker tag edge-tpu-v6-bench:${{ github.sha }} edge-tpu-v6-bench:latest

  deploy-staging:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v3
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        kubectl apply -f deploy/k8s/ --namespace=staging

  deploy-production:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        kubectl apply -f deploy/k8s/ --namespace=production
