apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-tpu-v6-benchmark
  namespace: edge-computing
  labels:
    app: edge-tpu-benchmark
    version: v1.0.0
    component: benchmarking
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: edge-tpu-benchmark
  template:
    metadata:
      labels:
        app: edge-tpu-benchmark
        version: v1.0.0
    spec:
      serviceAccountName: edge-tpu-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      
      containers:
      - name: edge-tpu-benchmark
        image: terragonlabs/edge-tpu-v6-benchmark:1.0.0
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        
        env:
        - name: EDGE_TPU_LOG_LEVEL
          value: "INFO"
        - name: EDGE_TPU_CONFIG_PATH
          value: "/app/config"
        - name: EDGE_TPU_DATA_PATH
          value: "/app/data"
        - name: WORKERS
          value: "4"
        - name: SECURITY_ENABLED
          value: "true"
        - name: MONITORING_ENABLED
          value: "true"
        
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
            ephemeral-storage: "1Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
            ephemeral-storage: "5Gi"
            nvidia.com/gpu: "0"  # No GPU required
        
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: data-volume
          mountPath: /app/data
        - name: cache-volume
          mountPath: /app/cache
        - name: logs-volume
          mountPath: /app/logs
        - name: tmp-volume
          mountPath: /tmp
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 6
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        
        # Lifecycle hooks
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      
      volumes:
      - name: config-volume
        configMap:
          name: edge-tpu-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: edge-tpu-data-pvc
      - name: cache-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: logs-volume
        emptyDir:
          sizeLimit: 2Gi
      - name: tmp-volume
        emptyDir:
          sizeLimit: 1Gi
      
      # Node affinity for Edge TPU devices
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: hardware.edgetpu
                operator: In
                values:
                - "true"
          - weight: 50
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - "edge-computing"
      
      # Tolerations for edge nodes
      tolerations:
      - key: edge-node
        operator: Equal
        value: "true"
        effect: NoSchedule
      
      # Pod disruption budget
      terminationGracePeriodSeconds: 30
      
      # Image pull secrets (if using private registry)
      imagePullSecrets:
      - name: terragonlabs-registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: edge-tpu-benchmark-service
  namespace: edge-computing
  labels:
    app: edge-tpu-benchmark
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: edge-tpu-benchmark

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: edge-tpu-config
  namespace: edge-computing
data:
  config.yaml: |
    # Edge TPU v6 Benchmark Configuration
    benchmark:
      default_warmup_runs: 10
      default_measurement_runs: 100
      default_timeout: 300
      max_concurrent_benchmarks: 4
      
    security:
      enable_authentication: true
      enable_rate_limiting: true
      max_requests_per_minute: 100
      enable_audit_logging: true
      
    monitoring:
      enable_metrics: true
      metrics_port: 9090
      health_check_interval: 30
      log_level: "INFO"
      
    storage:
      cache_size_mb: 1024
      results_retention_days: 30
      cleanup_interval_hours: 24
      
    performance:
      max_workers: 4
      worker_timeout: 300
      queue_size: 1000
      memory_limit_mb: 4096

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: edge-tpu-data-pvc
  namespace: edge-computing
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: edge-tpu-benchmark-ingress
  namespace: edge-computing
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-rps: "10"
spec:
  tls:
  - hosts:
    - edge-tpu-benchmark.terragonlabs.ai
    secretName: edge-tpu-benchmark-tls
  rules:
  - host: edge-tpu-benchmark.terragonlabs.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: edge-tpu-benchmark-service
            port:
              number: 80

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edge-tpu-service-account
  namespace: edge-computing
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: edge-computing
  name: edge-tpu-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: edge-tpu-rolebinding
  namespace: edge-computing
subjects:
- kind: ServiceAccount
  name: edge-tpu-service-account
  namespace: edge-computing
roleRef:
  kind: Role
  name: edge-tpu-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: edge-tpu-benchmark-pdb
  namespace: edge-computing
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: edge-tpu-benchmark